version: "3"
services:
  db:
    image: postgres
    # env_file: ".env.local"
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - local_pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

  server:
    image: postgrest/postgrest
    container_name: "postgrest"
    # env_file: ".env.local"
    ports:
      - "3000:3000"
    environment:
      PGRST_DB_URI: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      PGRST_OPENAPI_SERVER_PROXY_URI: http://127.0.0.1:3000
      PGRST_DB_SCHEMAS: self_hosted_wishlist
      PGRST_DB_ANON_ROLE: web_anon
    depends_on:
      db:
        condition: service_healthy
    restart: always

  swagger:
    image: swaggerapi/swagger-ui
    # env_file: ".env.local"
    ports:
      - "8080:8080"
    expose:
      - "8080"
    environment:
      API_URL: ${API_URL}

  pgadmin:
    image: dpage/pgadmin4
    entrypoint: /bin/sh -c "chmod 600 /pgpass; /entrypoint.sh;"
    user: root
    # env_file: ".env.local"
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - PGADMIN_CONFIG_SERVER_MODE=False
      - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=False
    ports:
      - "5050:80"
    configs:
      - source: servers.json
        target: /pgadmin4/servers.json
      - source: pgpass
        target: /pgpass

volumes:
  local_pgdata:

configs:
  pgpass:
    content: db:5432:*:${POSTGRES_USER}:${POSTGRES_PASSWORD}
  servers.json:
    content: |
      {"Servers": {"1": {
        "Group": "Servers",
        "Name": "Self Hosted Wishlist Postgres",
        "Host": "db",
        "Port": 5432,
        "MaintenanceDB": "postgres",
        "Username": "${POSTGRES_USER}",
        "PassFile": "/pgpass",
        "SSLMode": "prefer"
      }}}
